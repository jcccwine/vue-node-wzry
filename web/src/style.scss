// 重置样式
* {
  // 以边框为准，因为一般都是以内容为准，用padding或者border可能会撑大盒子
  box-sizing: border-box;
  outline: none;
}
html {
  font-size: 13px;
}
body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.2em;
  background-color: #f1f1f1;
}
a {
  color: #999;
}
// 定义颜色变量
$colors: (
  "primary": #db9e3f,
  "white": #fff,
  "light": #f9f9f9,
  "black": #000,
  "dark-1": #333,
  "dark": #222,
  "gray": #999,
);
@each $colorKey,$color in $colors {
  .text-#{colorKey} {
    color: $color;
  }
  .bg-#{$colorKey} {
    background-color: $color;
  }
}
// var: 变量名 list: 集合，循环变量是left的时候，代表这个类是 .text-left{text-align: left}
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var;
  }
}
// font-size,13是页面基础大小
$base-font-size: 1rem;
$font-sizes: (
  xs: 0.7692, // 10px
  sm: 0.9231, // 12px
  md: 1, // 13px
  lg: 1.0769, //14px
  xl: 1.2308 //16px
  );
@each $sizeKey,$size in $font-sizes {
  .fs-#{$sizeKey} {
    font-size: $size * $base-font-size
  }
}
// flex
.d-flex {
  display: flex;
}
.flex-column {
  flex-direction: column;
}
$flex-jc: (
  start: flex-start,
  end: flex-end,
  center: center,
  between: space-between,
  around: space-around
);
@each $jcKey,$value in $flex-jc {
  .ai-#{$jcKey} {
    align-items: $value;
  }
}
.flex-1{
  flex: 1;
}
.flex-grow-1 {
  flex-grow: 1;
}
$spacing-types: (
  m: margin, 
  p: padding
);
$spacing-directions: (
  t: top, 
  r: right, 
  b: bottom, 
  l: left
);
$spacing-base-size: 1rem;
$spacing-sizes: (
  0: 0,
  1: 0.25,
  2: 0.5,
  3: 1,
  4: 1.5,
  5: 3
);

@each $typeKey,$type in $spacing-types {
  @each $sizeKey,$size in $spacing-sizes {
    // .m-1 {margin: 0.25rem}
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $spacing-base-size
    }
    // .mx-1 水平方向 .my-1 垂直方向
    .#{$typeKey}left-#{$sizeKey} {
      #{$type}-left: $size * $spacing-base-size
    }
    .#{$typeKey}right-#{$sizeKey} {
      #{$type}-right: $size * $spacing-base-size
    }
    .#{$typeKey}top-#{$sizeKey} {
      #{$type}-top: $size * $spacing-base-size
    }
    .#{$typeKey}bottom-#{$sizeKey} {
      #{$type}-bottom: $size * $spacing-base-size
    }
  }
  
  // 三层嵌套循环实现 .mt-1 {margin-top: 0.25rem}
  @each $directionKey,$direction in $spacing-directions {
    @each $sizeKey,$size in $spacing-sizes {
      // mt-1{margin-top: 0.25rem}
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $spacing-base-size
      }
    }
  }
  .#{$typeKey} {
    #{$type}: 0;
  }
}
